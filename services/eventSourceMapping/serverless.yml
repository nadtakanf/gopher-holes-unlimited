service: gopher-holes-event-source-mapping

provider:
  name: aws
  profile: nadtakan
  stage: ${opt:stage, "dev"}
  region: ${opt:region, "us-west-1"}
    
custom:
  dynamodbStackName: gopher-holes-unlimited-dynamodb-${self:provider.stage}

functions:
  send-notification:
    role: LambdaRole
    handler: src/handlers/send-notification.handler

resources:
  Resources:
    LambdaRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ${self:custom.iam.lambda.name}
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
        Policies:
          - PolicyName: ${self:service}-${self:provider.stage}-${self:provider.region}-dynamodb-role
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action: 
                    - "dynamodb:GetRecords"
                    - "dynamodb:GetShardIterator"
                    - "dynamodb:DescribeStream"
                    - "dynamodb:ListStreams"
                  Resource: 
                    Fn::ImportValue: ${self:custom.dynamodbStackName}:GopherHolesStreamArn

    SendPushStreamEventSource:
      Type: AWS::Lambda::EventSourceMapping
      Properties: 
        BatchSize: 1
        Enabled: true
        StartingPosition: LATEST
        EventSourceArn: 
          Fn::ImportValue: ${self:custom.dynamodbStackName}:GopherHolesStreamArn
        FunctionName: 
          Fn::GetAtt: [SendDashnotificationLambdaFunction, Arn]
                      